<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">
    <!-- 把对象创建交给spring   -->
    <!--
    1.创建bean的三种方式
    2.bean对象的作用范围
    3.bean对象的生命周期
    -->
    <!--    创建bean的三种方式-->
    <!-- 第一种方式:使用默认的构造函数,如果没有默认构造函数则无法创建
    -->
    <!--    <bean id="accountService" class="com.tommy.service.impl.AccountServiceImpl"></bean>-->

    <!--    第二种方式:使用普通工厂中的方法创建对象(使用某个类中的方法创建对象,并存入spring容器
    )-->
    <!--    <bean id="instanceFactory" class="com.tommy.factory.InstanceFactory"/>-->
    <!--    <bean id="accountService" factory-bean="instanceFactory" factory-method="getAccountService"/>-->

    <!--        第三种方式:使用工厂中的静态方法创建对象-->
    <!--    <bean id="accountServicService" class="com.tommy.factory.StaticFactory" factory-method="getAccountService"  />-->
    <!-- bean的作用范围
        bean标签的scope属性：
        作用：用于指定bean的作用范围
        取值：
            singleton:单例（默认值）
            prototype：多例
            request:作用于web应用的请求范围
            session：作用于web应用的会话范围
            global-session：作用于集群环境的会话范围（全局会话范围），当不是集群环境时，它就是sesion
    -->
    <!--    <bean id="accountService" class="com.tommy.service.impl.AccountServiceImpl" scope="prototype"/>-->
    <!-- bean对象的生命周期
    单例对象：
    多例对象：

    -->
    <bean id="accountService" class="com.tommy.service.impl.AccountServiceImpl" scope="singleton"
    init-method="init" destroy-method="destroy"
    />
</beans>
